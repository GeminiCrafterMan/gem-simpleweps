// Dual MAC-10s
// Created out of necessity for a Perforator and Minigun replacement.
// Hehe MAC-10 go brrrrrr.
class GSW_DualMACs : GSW_Weapon // Replaces both Perforator and Minigun, so it's done in the event handler.
{

	Default
	{
		+WEAPON.AMMO_OPTIONAL
		Weapon.SlotNumber 4;
		Weapon.AmmoType "GSW_RevolverSpeedloader"; // Revolver bullets
		Weapon.AmmoGive 62; // two fully-loaded MACs...
		Weapon.AmmoUse 1;

		Tag "$TAG_DUALMACS";
		Obituary "$KILLDUALMACS";
		Inventory.PickupMessage "$GOTDUALMACS";

		Weapon.UpSound "weapons/dualmacs/draw";
		Inventory.PickupSound "weapons/dualmacs/pickup";
	}
	States
	{
		Spawn:
			MACG Z -1;
			Stop;


		Select:
			TNT1 AAAAA 1 {
				A_Raise(18);
				A_Overlay(-2, "Select.Left");
				A_Overlay(-3, "Select.Right");
			}
			Loop;

		Select.Left:
			TNT1 A 0 A_JumpIfNoAmmo("Select.Left.NoAmmo");
			MACG I 1;
			Stop;
		Select.Left.NoAmmo:
			MACG G 1;
			Stop;

		Select.Right:
			TNT1 A 0 A_JumpIfNoAmmo("Select.Right.NoAmmo");
			MACG J 1;
			Stop;
		Select.Right.NoAmmo:
			MACG H 1;
			Stop;


		Deselect:
			TNT1 AAAAA 1 A_Lower(18);
			TNT1 A 0 {
				A_Overlay(-2, "MACStop");
				A_Overlay(-3, "MACStop");
			}
			Loop;
		MACStop:
			Stop;


		Ready:
			TNT1 A 1 {
				A_WeaponReady();
				A_Overlay(-2, "Ready.Left", true); // use "Stop" on the fire state
				A_Overlay(-3, "Ready.Right", true);
			}
			Loop;

		Ready.Left:
			TNT1 A 0 A_JumpIfNoAmmo("Ready.Left.NoAmmo");
			MACG E 1;
			Loop;
		Ready.Left.NoAmmo:
			TNT1 A 0 A_JumpIfInventory("GSW_RevolverSpeedloader", 1, "Ready.Left");
			MACG A 1;
			Loop;

		Ready.Right:
			TNT1 A 0 A_JumpIfNoAmmo("Ready.Right.NoAmmo");
			MACG F 1;
			Loop;
		Ready.Right.NoAmmo:
			TNT1 A 0 A_JumpIfInventory("GSW_RevolverSpeedloader", 1, "Ready.Right");
			MACG B 1;
			Loop;


		Fire:
			TNT1 A 1 A_Overlay(-2, "Fire.Left");
			TNT1 A 1 A_Overlay(-3, "Fire.Right");
			Goto Ready;

		Fire.Left:
			MACG A 1 {
				if (invoker.CheckAmmo(PrimaryFire, false, true))
				{
					A_FireBullets(2, 2, -1, 30, "GSW_BulletPuff", FBF_USEAMMO|FBF_NORANDOM|FBF_NORANDOMPUFFZ, missile: "GSW_BulletTracer", 0.5, -7.5); // -1 bullets to always fire with spread
					A_Overlay(-4, "Flash.Left");
					A_StartSound("weapons/dualmacs/fire", CHAN_WEAPON, CHANF_OVERLAP);
				}
				else
					A_StartSound("weapons/glock/empty");
			}
			MACG C 1;
			Goto Ready.Left;
		Flash.Left:
			MACF A 1 Bright A_AttachLightDef("Flash1", "GSW_GunFlash");
			MACF B 1 Bright;
			MACF B 0 A_RemoveLight("Flash1");
			Stop;

		Fire.Right:
			MACG B 1 {
				if (invoker.CheckAmmo(PrimaryFire, false, true))
				{
					A_FireBullets(2, 2, -1, 30, "GSW_ChaingunPuff", FBF_USEAMMO|FBF_NORANDOM|FBF_NORANDOMPUFFZ, missile: "GSW_BulletTracer", 0.5, 7.5); // -1 bullets to always fire with spread
					A_Overlay(-5, "Flash.Right");
					A_StartSound("weapons/dualmacs/fire", CHAN_WEAPON, CHANF_OVERLAP);
				}
				else
					A_StartSound("weapons/glock/empty");
			}
			MACG D 1;
			Goto Ready.Right;
		Flash.Right:
			MACF C 1 Bright A_AttachLightDef("Flash2", "GSW_GunFlash");
			MACF D 1 Bright;
			MACF D 0 A_RemoveLight("Flash2");
			Stop;
	}
}