// "Pummeler" Pump Shotgun
// A high-power projectile? shotgun.
// Holds 8 shots in the mag, and one more in the chamber. Reflect this in the reload from empty!
class GSW_PummelerAmmo : Ammo
{
	Default
	{
		Inventory.Icon "PUMGY0";
		Inventory.Amount 0;
		Inventory.MaxAmount 9;
		Ammo.BackpackAmount 0;
		Ammo.BackpackMaxAmount 9;
		+INVENTORY.IGNORESKILL
	}
}
class GSW_Pummeler : GSW_Weapon replaces Shotgun
{
	Default
	{
		+WEAPON.AMMO_OPTIONAL
		Weapon.SlotNumber 3;
		Weapon.AmmoType1 "GSW_PummelerAmmo";
		Weapon.AmmoUse1 1;
		Weapon.AmmoGive1 0;
		Weapon.AmmoType2 "Shell";
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive2 4;
		DamageType "Shotgun";

		Tag "$TAG_PUMMELER";
		Obituary "$KILLPUMMELER";
		Inventory.PickupMessage "$GOTPUMMELER";

		AttackSound "weapons/pummeler/fire";
		Weapon.UpSound "weapons/pummeler/draw";
		Inventory.PickupSound "weapons/pummeler/pickup";
		
		Decal "BulletChip";
	}
	States
	{
		Spawn:
			PUMG Z -1;
			Stop;
		Select:
			PUMG A 1 A_Raise(18);
			Loop;
		Deselect:
			PUMG A 1 A_Lower(18);
			Loop;
		Ready:
			PUMG A 1 A_WeaponReady(WRF_ALLOWRELOAD);
			Loop;
		Fire:
			PUMG A 2 {
				A_FireBullets(4, 4, 10, 15, flags: FBF_USEAMMO|FBF_NORANDOM|FBF_NORANDOMPUFFZ); // Do stuff with missile params when you add tracers
				A_GunFlash();
			}
			PUMG BCCAAAA 2; // Recoil
			// If out of ammo, reload (empty)
			GLOC A 0 A_JumpIfNoAmmo("ReloadEmpty");
			PUMG E 2; // Pump
			PUMG F 6 A_StartSound("weapons/pummeler/pumpin");
			PUMG E 2;
			PUMG A 8 A_StartSound("weapons/pummeler/pumpout");
			PUMG A 4 A_ReFire;
			Goto Ready;
		ReloadEmpty:
			PUMG GHIJ 2;
		ReloadEmpty.Repeat:
			// if full on ammo, finish reload
			TNT1 A 0 A_JumpIfInventory("GSW_PummelerAmmo", 8, "ReloadEmpty.Finish");
			// if at least 1 shell to load, continue
			TNT1 A 0 A_JumpIfInventory("Shell", 1, 1);
			Goto ReloadEmpty.Finish;
			// exchange shell for ammo
			TNT1 A 0 {
				A_GiveInventory("GSW_PummelerAmmo", 1);
				A_Takeinventory("Shell",1);
			}
			PUMG KLM 2;
			PUMG N 2 A_StartSound("weapons/pummeler/load");
			PUMG OP 2;
			Goto ReloadEmpty.Repeat;
		ReloadEmpty.Finish:
			PUMG JIHG 2;
			PUMG E 2; // Pump
			PUMG F 6 A_StartSound("weapons/pummeler/pumpin");
			PUMG E 2;
			PUMG A 8 A_StartSound("weapons/pummeler/pumpout");
			Goto Ready;

		Reload:
		// Check for shells, and if you're already full.
			TNT1 A 0 A_JumpIfInventory("GSW_PummelerAmmo", 0, "Ready");
			TNT1 A 0 A_JumpIfNoAmmo("ReloadEmpty");
			PUMG GHIJ 2;
		Reload.Repeat:
			// if full on ammo, finish reload
			TNT1 A 0 A_JumpIfInventory("GSW_PummelerAmmo", 0, "Reload.Finish");
			// if at least 1 shell to load, continue
			TNT1 A 0 A_JumpIfInventory("Shell", 1, 1);
			Goto Reload.Finish;
			// exchange shell for ammo
			TNT1 A 0 {
				A_GiveInventory("GSW_PummelerAmmo", 1);
				A_Takeinventory("Shell",1);
			}
			PUMG KLM 2;
			PUMG N 2 A_StartSound("weapons/pummeler/load");
			PUMG OP 2;
			Goto Reload.Repeat;
		Reload.Finish:
			PUMG JIHG 2;
			Goto Ready;
		Flash:
			PUMF A 1 Bright A_AttachLightDef("Flash", "GSW_GunFlash");
			PUMF B 1 Bright;
			PUMF B 0 A_RemoveLight("Flash");
			Stop;
	}
}